library("samc")
library("raster")
library("viridisLite")
# "Load" the data. In this case we are using data built into the package.
# In practice, users will likely load raster data using the raster() function
# from the raster package.
res_data <- samc::ex_res_data
abs_data <- samc::ex_abs_data
occ_data <- samc::ex_occ_data
# Plot the data and make sure it looks good. The built-in data is in matrices,
# so we use the raster() function to help with the plotting. Note that when
# matrices are used by the package, it sets the extents based on the number of
# rows/cols. We do the same thing here when converting to a raster, otherwise
# the default extents will be (0,1) for both x and y, which is not only
# uninformative, but can result in "stretching" when visualizing datasets
# based non-square matrices.
plot(raster(res_data, xmn = 1, xmx = ncol(res_data), ymn = 1, ymx = nrow(res_data)),
main = "Example Resistance Data", xlab = "x", ylab = "y", col = viridis(256))
plot(raster(abs_data, xmn = 1, xmx = ncol(abs_data), ymn = 1, ymx = nrow(abs_data)),
main = "Example Absorption Data", xlab = "x", ylab = "y", col = viridis(256))
plot(raster(occ_data, xmn = 1, xmx = ncol(occ_data), ymn = 1, ymx = nrow(occ_data)),
main = "Example Occupancy Data", xlab = "x", ylab = "y", col = viridis(256))
library(sf)
wd <- file.path(getwd(), 'desktop', 'AProtconn','data','CA')
setwd(wd)
# group2 results
dfconefor <- read.csv('result/6_test_WITHOUT_TRANS_node_importances.csv')
getwd()
